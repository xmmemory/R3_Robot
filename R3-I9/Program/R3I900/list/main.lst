C51 COMPILER V9.54   MAIN                                                                  10/29/2018 13:39:15 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\list\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\list\main.lst
                    -) OBJECT(.\list\main.obj)

line level    source

   1          
   2          /*------------------------------------------------------------------*/
   3          /* --- STC MCU International Limited -------------------------------*/
   4          /* --- STC 1T Series MCU RC Demo -----------------------------------*/
   5          /* --- Mobile: (86)13922805190 -------------------------------------*/
   6          /* --- Fax: 86-0513-55012956,55012947,55012969 ---------------------*/
   7          /* --- Tel: 86-0513-55012928,55012929,55012966 ---------------------*/
   8          /* --- Web: www.GXWMCU.com -----------------------------------------*/
   9          /* --- QQ:  800003751 ----------------------------------------------*/
  10          /* If you want to use the program or the program referenced in the  */
  11          /* article, please specify in which data and procedures from STC    */
  12          /*------------------------------------------------------------------*/
  13          
  14          #include        "config.h"
  15          #include        "timer.h"
  16          #include        "delay.h"
  17          #include        "GPIO.h"
  18          
  19          /*************  功能说明        **************
  20          
  21          ******************************************/
  22          
  23          /*************  本地常量声明    **************/
  24          
  25          
  26          /*************  本地变量声明    **************/
  27          
  28          u16 time_us_count;              //deley_us_count
  29          
  30          /*************  本地函数声明    **************/
  31          void ir_send_bit(u8 pose,u8 sta);
  32          void ir_send_start(u8 pose);
  33          void ir_send_data(u8 pose,u8 send_data);
  34          void ir_send_end(u8 pose);
  35          void delay_us(u16 i);
  36          /*************  外部函数和变量声明 *****************/
  37          
  38          
  39          
  40          /************************ 定时器配置 ****************************/
  41          void    Timer_config(void)
  42          {
  43   1              TIM_InitTypeDef         TIM_InitStructure;                                      //结构定义
  44   1              TIM_InitStructure.TIM_Mode      = TIM_16BitAutoReload;  //指定工作模式,   TIM_16BitAutoReload,TIM_16Bit,TI
             -M_8BitAutoReload,TIM_16BitAutoReloadNoMask
  45   1              TIM_InitStructure.TIM_Polity    = PolityHigh;                   //指定中断优先级, PolityHigh,PolityLow
  46   1              TIM_InitStructure.TIM_Interrupt = ENABLE;                               //中断是否允许,   ENABLE或DISABLE
  47   1              TIM_InitStructure.TIM_ClkSource = TIM_CLOCK_1T;                 //指定时钟源,     TIM_CLOCK_1T,TIM_CLOCK_12T,TIM_CLOCK_
             -Ext
  48   1              TIM_InitStructure.TIM_ClkOut    = DISABLE;                              //是否输出高速脉冲, ENABLE或DISABLE
  49   1              TIM_InitStructure.TIM_Value     = 65536UL - (MAIN_Fosc / 100000UL);     //初值,――――10us定时
  50   1              //65536UL - (MAIN_Fosc / 1000);                 //初值――――――1ms定时
  51   1              //65536UL - (MAIN_Fosc / (50*12));              //初值――――――20ms定时
  52   1              TIM_InitStructure.TIM_Run       = ENABLE;                               //是否初始化后启动定时器, ENABLE或DISABLE
C51 COMPILER V9.54   MAIN                                                                  10/29/2018 13:39:15 PAGE 2   

  53   1              Timer_Inilize(Timer0,&TIM_InitStructure);                               //初始化Timer0    Timer0,Timer1,Timer2
  54   1      
  55   1      //      TIM_InitTypeDef         TIM_InitStructure;                                      //结构定义
  56   1      //      TIM_InitStructure.TIM_Mode      = TIM_16BitAutoReload;  //指定工作模式,   TIM_16BitAutoReload,TIM_16Bit,
             -TIM_8BitAutoReload,TIM_16BitAutoReloadNoMask
  57   1      //      TIM_InitStructure.TIM_Polity    = PolityLow;                    //指定中断优先级, PolityHigh,PolityLow
  58   1      //      TIM_InitStructure.TIM_Interrupt = DISABLE;                              //中断是否允许,   ENABLE或DISABLE
  59   1      //      TIM_InitStructure.TIM_ClkSource = TIM_CLOCK_1T;                 //指定时钟源,     TIM_CLOCK_1T,TIM_CLOCK_12T,TIM_CLOC
             -K_Ext
  60   1      //      TIM_InitStructure.TIM_ClkOut    = ENABLE;                               //是否输出高速脉冲, ENABLE或DISABLE
  61   1      //      TIM_InitStructure.TIM_Value     = 65536UL - (MAIN_Fosc / 100000UL);             //初值,10us定时
  62   1      //      TIM_InitStructure.TIM_Run       = ENABLE;                               //是否初始化后启动定时器, ENABLE或DISABLE
  63   1      //      Timer_Inilize(Timer0,&TIM_InitStructure);                               //初始化Timer0    Timer0,Timer1,Timer2
  64   1      
  65   1      //      TIM_InitStructure.TIM_Mode      = TIM_16BitAutoReload;  //指定工作模式,   TIM_16BitAutoReload,TIM_16Bit,
             -TIM_8BitAutoReload,TIM_16BitAutoReloadNoMask
  66   1      //      TIM_InitStructure.TIM_Polity    = PolityLow;                    //指定中断优先级, PolityHigh,PolityLow
  67   1      //      TIM_InitStructure.TIM_Interrupt = ENABLE;                               //中断是否允许,   ENABLE或DISABLE
  68   1      //      TIM_InitStructure.TIM_ClkSource = TIM_CLOCK_1T;                 //指定时钟源, TIM_CLOCK_1T,TIM_CLOCK_12T,TIM_CLOCK_Ex
             -t
  69   1      //      TIM_InitStructure.TIM_ClkOut    = ENABLE;                               //是否输出高速脉冲, ENABLE或DISABLE
  70   1      //      TIM_InitStructure.TIM_Value     = 65536UL - (MAIN_Fosc / 1000);         //初值,1ms定时
  71   1      //      TIM_InitStructure.TIM_Run       = ENABLE;                               //是否初始化后启动定时器, ENABLE或DISABLE
  72   1      //      Timer_Inilize(Timer1,&TIM_InitStructure);                               //初始化Timer1    Timer0,Timer1,Timer2
  73   1      
  74   1      //      TIM_InitStructure.TIM_Interrupt = ENABLE;                               //中断是否允许,   ENABLE或DISABLE. (注意: Timer2固定为16位
             -自动重装, 中断固定为低优先级)
  75   1      //      TIM_InitStructure.TIM_ClkSource = TIM_CLOCK_12T;                //指定时钟源,     TIM_CLOCK_1T,TIM_CLOCK_12T,TIM_CLOC
             -K_Ext
  76   1      //      TIM_InitStructure.TIM_ClkOut    = ENABLE;                               //是否输出高速脉冲, ENABLE或DISABLE
  77   1      //      TIM_InitStructure.TIM_Value     = 65536UL - (MAIN_Fosc / (50*12));              //初值20ms定时
  78   1      //      TIM_InitStructure.TIM_Run       = ENABLE;                               //是否初始化后启动定时器, ENABLE或DISABLE
  79   1      //      Timer_Inilize(Timer2,&TIM_InitStructure);                               //初始化Timer2    Timer0,Timer1,Timer2
  80   1      }
  81          
  82          
  83          /******************** IO配置函数 **************************/
  84          void    GPIO_config(void)
  85          {
  86   1              GPIO_InitTypeDef        GPIO_InitStructure;             //结构定义
  87   1              GPIO_InitStructure.Pin  = GPIO_Pin_7;           //指定要初始化的IO, GPIO_Pin_0 ~ GPIO_Pin_7, 或操作
  88   1              GPIO_InitStructure.Mode = GPIO_OUT_PP;          //指定IO的输入或输出方式,GPIO_PullUp,GPIO_HighZ,GPIO_OUT_OD,GPIO_
             -OUT_PP
  89   1              GPIO_Inilize(GPIO_P2,&GPIO_InitStructure);      //初始化
  90   1      
  91   1              GPIO_InitStructure.Pin  = GPIO_Pin_0|GPIO_Pin_1|GPIO_Pin_2;             //指定要初始化的IO, GPIO_Pin_0 |1|2, 或操作
  92   1              GPIO_InitStructure.Mode = GPIO_OUT_PP;          //指定IO的输入或输出方式,GPIO_PullUp,GPIO_HighZ,GPIO_OUT_OD,GPIO_
             -OUT_PP
  93   1              GPIO_Inilize(GPIO_P1,&GPIO_InitStructure);      //初始化
  94   1      }
  95          
  96          
  97          /******************** 主函数**************************/
  98          void main(void)
  99          {
 100   1              P_PWM = 0;
 101   1              P3M1 &= ~(1 << 5);      //P3.5 设置为推挽输出
 102   1              P3M0 |=  (1 << 5);
 103   1      
 104   1      //      P1M1 &= ~(1 << 4);      //P1.4 设置为推挽输出   STC15W204S
 105   1      //      P1M0 |=  (1 << 4);
 106   1      
C51 COMPILER V9.54   MAIN                                                                  10/29/2018 13:39:15 PAGE 3   

 107   1              Timer_config();
 108   1              EA = 1;
 109   1              P35 = 0;                //对于STC15W408S系列，要输出低，或者设置成推挽或OD，否则不正常
 110   1      
 111   1      //      WDT_CONTR = 0x04;       //看门狗定时器溢出时间计算公式: (12 * 32768 * PS) / FOSC (秒)
 112   1      //                            //设置看门狗定时器分频数为32,溢出时间如下:
 113   1      //                            //11.0592M : 1.14s
 114   1      //                            //18.432M  : 0.68s
 115   1      //                            //20M      : 0.63s
 116   1      //    WDT_CONTR |= 0x20;      //启动看门狗
 117   1              GPIO_config();
 118   1              
 119   1              LED_Green = 1;  
 120   1              
 121   1      //      if(WDT_CONTR | 0x80) 
 122   1      //      LED_Green = 0;  
 123   1      //      WDT_CONTR &= 0x7F;      //喂狗
 124   1              
 125   1              while (1)
 126   1              {       
 127   2      //              WDT_CONTR |= 0x10;      //喂狗
 128   2                      delay_ms(100);                  //延时100ms
 129   2                      ir_send_start(0);
 130   2                      ir_send_data(0,0x00);
 131   2                      ir_send_data(0,0xFF);
 132   2                      ir_send_data(0,0x68);
 133   2                      ir_send_data(0,0x97);
 134   2                      ir_send_end(0);
 135   2                      LED_L = LED_M = LED_R = 0;
 136   2                      LED_Green = ~LED_Green;
 137   2                      
 138   2                      delay_ms(100);                  //延时100ms
 139   2                      ir_send_start(1);
 140   2                      ir_send_data(1,0x00);
 141   2                      ir_send_data(1,0xFF);
 142   2                      ir_send_data(1,0x98);
 143   2                      ir_send_data(1,0x67);
 144   2                      ir_send_end(1);
 145   2                      LED_L = LED_M = LED_R = 0;
 146   2                      LED_Green = ~LED_Green;
 147   2                      
 148   2                      delay_ms(100);                  //延时100ms
 149   2                      ir_send_start(2);
 150   2                      ir_send_data(2,0x00);
 151   2                      ir_send_data(2,0xFF);
 152   2                      ir_send_data(2,0xB0);
 153   2                      ir_send_data(2,0x4F);
 154   2                      ir_send_end(2);
 155   2                      LED_L = LED_M = LED_R = 0;
 156   2                      LED_Green = ~LED_Green;
 157   2              }
 158   1      }
 159          
 160          /*
 161          **********************************************************************************************************
             -**************
 162          *                                                   ir_send_data
 163          * Description: 红外数据发送data;
 164          * Arguments  : u8 pose,u8 send_data;
 165          * Note(s)    : 1) Null；
 166          **********************************************************************************************************
             -**************
C51 COMPILER V9.54   MAIN                                                                  10/29/2018 13:39:15 PAGE 4   

 167          */
 168          void ir_send_data(u8 pose,u8 send_data)
 169          {
 170   1              u8 i;
 171   1              for(i=0;i<8;i++)
 172   1              {
 173   2                      ir_send_bit(pose,send_data&0x80);
 174   2                      send_data = send_data<<1;
 175   2              }
 176   1      }       
 177          
 178          /*
 179          **********************************************************************************************************
             -**************
 180          *                                                   ir_send_bit
 181          * Description: 红外数据发送bit;
 182          * Arguments  : u8 pose,u8 sta;
 183          * Note(s)    : 1) Null；
 184          **********************************************************************************************************
             -**************
 185          */
 186          void ir_send_bit(u8 pose,u8 sta)
 187          {
 188   1              if(sta)
 189   1              {
 190   2                      switch(pose)
 191   2                      {
 192   3                              case 0:
 193   3                                      LED_L = 1;
 194   3                                      delay_us(560);
 195   3                                      LED_L = 0;
 196   3                                      delay_us(1690);
 197   3                                      break;
 198   3                              case 1:
 199   3                                      LED_M = 1;
 200   3                                      delay_us(560);
 201   3                                      LED_M = 0;
 202   3                                      delay_us(1690);
 203   3                                      break;
 204   3                              case 2:
 205   3                                      LED_R = 1;
 206   3                                      delay_us(560);
 207   3                                      LED_R = 0;
 208   3                                      delay_us(1690);
 209   3                                      break;
 210   3                              default:
 211   3                                      break;
 212   3                      }
 213   2              }
 214   1              else
 215   1              {
 216   2                      switch(pose)
 217   2                      {
 218   3                              case 0:
 219   3                                      LED_L = 1;
 220   3                                      delay_us(560);
 221   3                                      LED_L = 0;
 222   3                                      delay_us(560);
 223   3                                      break;
 224   3                              case 1:
 225   3                                      LED_M = 1;
 226   3                                      delay_us(560);
C51 COMPILER V9.54   MAIN                                                                  10/29/2018 13:39:15 PAGE 5   

 227   3                                      LED_M = 0;
 228   3                                      delay_us(560);
 229   3                                      break;
 230   3                              case 2:
 231   3                                      LED_R = 1;
 232   3                                      delay_us(560);
 233   3                                      LED_R = 0;
 234   3                                      delay_us(560);
 235   3                                      break;
 236   3                              default:
 237   3                                      break;
 238   3                      }
 239   2              }       
 240   1      }       
 241          
 242          /*
 243          **********************************************************************************************************
             -**************
 244          *                                                   ir_send_start
 245          * Description: 红外数据发送引导信号;
 246          * Arguments  : u8 pose;
 247          * Note(s)    : 1) Null；
 248          **********************************************************************************************************
             -**************
 249          */
 250          void ir_send_start(u8 pose)
 251          {
 252   1              switch(pose)
 253   1              {
 254   2                      case 0:
 255   2                              LED_L = 1;
 256   2                              delay_us(9000);
 257   2                              LED_L = 0;
 258   2                              delay_us(4500);
 259   2                              break;
 260   2                      case 1:
 261   2                              LED_M = 1;
 262   2                              delay_us(9000);
 263   2                              LED_M = 0;
 264   2                              delay_us(4500);
 265   2                              break;
 266   2                      case 2:
 267   2                              LED_R = 1;
 268   2                              delay_us(9000);
 269   2                              LED_R = 0;
 270   2                              delay_us(4500);
 271   2                              break;
 272   2                      default:
 273   2                              break;
 274   2              }       
 275   1      }       
 276          
 277          /*
 278          **********************************************************************************************************
             -**************
 279          *                                                   ir_send_end
 280          * Description: 红外数据发送引导信号;
 281          * Arguments  : u8 pose;
 282          * Note(s)    : 1) Null；
 283          **********************************************************************************************************
             -**************
 284          */
C51 COMPILER V9.54   MAIN                                                                  10/29/2018 13:39:15 PAGE 6   

 285          void ir_send_end(u8 pose)
 286          {       
 287   1              switch(pose)
 288   1              {
 289   2                      case 0:
 290   2                              LED_L = 1;
 291   2                              delay_us(5000);
 292   2                              LED_L = 0;
 293   2                              delay_us(2250);
 294   2                              break;
 295   2                      case 1:
 296   2                              LED_M = 1;
 297   2                              delay_us(5000);
 298   2                              LED_M = 0;
 299   2                              delay_us(2250);
 300   2                              break;
 301   2                      case 2:
 302   2                              LED_R = 1;
 303   2                              delay_us(5000);
 304   2                              LED_R = 0;
 305   2                              delay_us(2250);
 306   2                              break;
 307   2                      default:
 308   2                              break;
 309   2              }       
 310   1      }       
 311          
 312          void delay_us(unsigned int i)           //@12.000MHz
 313          {       
 314   1              time_us_count = (i/10) + 1;
 315   1              while(time_us_count);
 316   1      }
 317          
 318          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    511    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2      14
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
