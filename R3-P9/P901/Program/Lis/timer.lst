C51 COMPILER V9.54   TIMER                                                                 05/09/2018 14:33:06 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE TIMER
OBJECT MODULE PLACED IN .\Obj\timer.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Application\Source\timer.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Application
                    -\Header) DEBUG OBJECTEXTEND PRINT(.\Lis\timer.lst) TABS(2) OBJECT(.\Obj\timer.obj)

line level    source

   1          
   2          /*------------------------------------------------------------------*/
   3          /* --- STC MCU International Limited -------------------------------*/
   4          /* --- STC 1T Series MCU RC Demo -----------------------------------*/
   5          /* --- Mobile: (86)13922805190 -------------------------------------*/
   6          /* --- Fax: 86-0513-55012956,55012947,55012969 ---------------------*/
   7          /* --- Tel: 86-0513-55012928,55012929,55012966 ---------------------*/
   8          /* --- Web: www.GXWMCU.com -----------------------------------------*/
   9          /* --- QQ:  800003751 ----------------------------------------------*/
  10          /* If you want to use the program or the program referenced in the  */
  11          /* article, please specify in which data and procedures from STC    */
  12          /*------------------------------------------------------------------*/
  13          
  14          /*************  功能说明  **************
  15          
  16          本文件为STC15xxx系列的定时器初始化和中断程序,用户可以在这个文件中修改自己需要的中断程序.
  17          
  18          
  19          ******************************************/
  20          
  21          
  22          
  23          #include  "timer.h"
  24          //========================================================================
  25          // 函数: u8 Timer_Inilize(u8 TIM, TIM_InitTypeDef *TIMx)
  26          // 描述: 定时器初始化程序.
  27          // 参数: TIMx: 结构参数,请参考timer.h里的定义.
  28          // 返回: 成功返回0, 空操作返回1,错误返回2.
  29          // 版本: V1.0, 2012-10-22
  30          //========================================================================
  31          u8  Timer_Inilize(u8 TIM, TIM_InitTypeDef *TIMx)
  32          {
  33   1        if(TIM > Timer2)  return 1; //空操作
  34   1      
  35   1        if(TIM == Timer0)
  36   1        {
  37   2          TR0 = 0;    //停止计数
  38   2          if(TIMx->TIM_Interrupt == ENABLE)   ET0 = 1;  //允许中断
  39   2          else                  ET0 = 0;  //禁止中断
  40   2          if(TIMx->TIM_Polity == PolityHigh)    PT0 = 1;  //高优先级中断
  41   2          else                  PT0 = 0;  //低优先级中断
  42   2          if(TIMx->TIM_Mode >  TIM_16BitAutoReloadNoMask) return 2; //错误
  43   2          TMOD = (TMOD & ~0x03) | TIMx->TIM_Mode; //工作模式,0: 16位自动重装, 1: 16位定时/计数, 2: 8位自动重装, 3:
             - 16位自动重装, 不可屏蔽中断
  44   2          if(TIMx->TIM_ClkSource == TIM_CLOCK_12T)  AUXR &= ~0x80;  //12T
  45   2          if(TIMx->TIM_ClkSource == TIM_CLOCK_1T)   AUXR |=  0x80;  //1T
  46   2          if(TIMx->TIM_ClkSource == TIM_CLOCK_Ext)  TMOD |=  0x04;  //对外计数或分频
  47   2          else                    TMOD &= ~0x04;  //定时
  48   2          if(TIMx->TIM_ClkOut == ENABLE)  INT_CLKO |=  0x01;  //输出时钟
  49   2          else              INT_CLKO &= ~0x01;  //不输出时钟
  50   2          
  51   2          TH0 = (u8)(TIMx->TIM_Value >> 8);
  52   2          TL0 = (u8)TIMx->TIM_Value;
  53   2          if(TIMx->TIM_Run == ENABLE) TR0 = 1;  //开始运行
C51 COMPILER V9.54   TIMER                                                                 05/09/2018 14:33:06 PAGE 2   

  54   2          return  0;    //成功
  55   2        }
  56   1      
  57   1        if(TIM == Timer1)
  58   1        {
  59   2          TR1 = 0;    //停止计数
  60   2          if(TIMx->TIM_Interrupt == ENABLE)   ET1 = 1;  //允许中断
  61   2          else                  ET1 = 0;  //禁止中断
  62   2          if(TIMx->TIM_Polity == PolityHigh)    PT1 = 1;  //高优先级中断
  63   2          else                  PT1 = 0;  //低优先级中断
  64   2          if(TIMx->TIM_Mode >= TIM_16BitAutoReloadNoMask) return 2; //错误
  65   2          TMOD = (TMOD & ~0x30) | TIMx->TIM_Mode; //工作模式,0: 16位自动重装, 1: 16位定时/计数, 2: 8位自动重装
  66   2          if(TIMx->TIM_ClkSource == TIM_CLOCK_12T)  AUXR &= ~0x40;  //12T
  67   2          if(TIMx->TIM_ClkSource == TIM_CLOCK_1T)   AUXR |=  0x40;  //1T
  68   2          if(TIMx->TIM_ClkSource == TIM_CLOCK_Ext)  TMOD |=  0x40;  //对外计数或分频
  69   2          else                    TMOD &= ~0x40;  //定时
  70   2          if(TIMx->TIM_ClkOut == ENABLE)  INT_CLKO |=  0x02;  //输出时钟
  71   2          else              INT_CLKO &= ~0x02;  //不输出时钟
  72   2          
  73   2          TH1 = (u8)(TIMx->TIM_Value >> 8);
  74   2          TL1 = (u8)TIMx->TIM_Value;
  75   2          if(TIMx->TIM_Run == ENABLE) TR1 = 1;  //开始运行
  76   2          return  0;    //成功
  77   2        }
  78   1      
  79   1        if(TIM == Timer2)   //Timer2,固定为16位自动重装, 中断无优先级
  80   1        {
  81   2          AUXR &= ~(1<<4);  //停止计数
  82   2          if(TIMx->TIM_Interrupt == ENABLE)     IE2  |=  (1<<2);  //允许中断
  83   2          else                    IE2  &= ~(1<<2);  //禁止中断
  84   2          if(TIMx->TIM_ClkSource >  TIM_CLOCK_Ext)  return 2;
  85   2          if(TIMx->TIM_ClkSource == TIM_CLOCK_12T)  AUXR &= ~(1<<2);  //12T
  86   2          if(TIMx->TIM_ClkSource == TIM_CLOCK_1T)   AUXR |=  (1<<2);  //1T
  87   2          if(TIMx->TIM_ClkSource == TIM_CLOCK_Ext)  AUXR |=  (1<<3);  //对外计数或分频
  88   2          else                    AUXR &= ~(1<<3);  //定时
  89   2          if(TIMx->TIM_ClkOut == ENABLE)  INT_CLKO |=  0x04;  //输出时钟
  90   2          else              INT_CLKO &= ~0x04;  //不输出时钟
  91   2      
  92   2          TH2 = (u8)(TIMx->TIM_Value >> 8);
  93   2          TL2 = (u8)TIMx->TIM_Value;
  94   2          if(TIMx->TIM_Run == ENABLE) AUXR |=  (1<<4);  //开始运行
  95   2          return  0;    //成功
  96   2        }
  97   1        return 2; //错误
  98   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    411    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
